/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package eu.apuseni.discbot;

import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.util.Properties;

import discord4j.core.DiscordClientBuilder;
import discord4j.core.GatewayDiscordClient;
import discord4j.core.event.domain.lifecycle.ReadyEvent;
import discord4j.core.event.domain.message.MessageCreateEvent;
import discord4j.core.object.entity.User;

public class App {

	public static void main(String[] args) throws FileNotFoundException, IOException {
		Properties props = new Properties();
		props.load(new FileInputStream("./gradle.properties"));
		GatewayDiscordClient client = DiscordClientBuilder.create(props.getProperty("discord.token")).build().login()
				.block();

		client.getEventDispatcher().on(ReadyEvent.class).subscribe(event -> {
			final User self = event.getSelf();
			System.out.println(String.format("Logged in as %s#%s", self.getUsername(), self.getDiscriminator()));
		});

		Help helpCmd = new Help();
		client.getEventDispatcher().on(MessageCreateEvent.class).map(MessageCreateEvent::getMessage)
				.filter(msg -> helpCmd.test(msg.getContent())).subscribe(helpCmd::execute);

		Version versionCmd = new Version();
		helpCmd.register(versionCmd);
		client.getEventDispatcher().on(MessageCreateEvent.class).map(MessageCreateEvent::getMessage)
				.filter(msg -> versionCmd.test(msg.getContent())).subscribe(versionCmd::execute);

		NewContest newContest = new NewContest();
		helpCmd.register(newContest);
		client.getEventDispatcher().on(MessageCreateEvent.class).map(MessageCreateEvent::getMessage)
				.filter(msg -> newContest.test(msg.getContent())).subscribe(newContest::execute);

//		client.getEventDispatcher().on(MessageCreateEvent.class).map(MessageCreateEvent::getMessage).subscribe(msg -> {
//			System.out.println("message");
//			long channel = msg.getChannelId().asLong();
//			String username = msg.getAuthor().get().getUsername();
//			msg.getId().asLong();
//			long timeStamp = msg.getTimestamp().toEpochMilli();
//			System.out.printf("%d: %s@%d: %s\n", timeStamp, username, channel, msg.getContent());
//		});

		client.onDisconnect().block();

	}

}
